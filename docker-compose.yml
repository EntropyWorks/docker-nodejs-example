#
# This is a good starting point for a development compose file.
# Feel free to duplicate and create other enviornments.
#
# Once they implement environment vars/arguments for docker-composer
# this file can be more dynamic. For now just create more than one
# and run with `docker-compose -f my-file.yml`.
#
web:
  build: .
  links:
   - mongo
   - redis

  # These are necessary so you can view both the node app (via forever)
  # and the reverse proxy nginx server pointing to your node app. Really,
  # the nginx bit is only useful for staging/production.
  ports:
    - "8080:8080"
    - "8888:80"

  # Set env vars for node.
  environment:
    NODE_ENV: development

  # Uncomment this when you're developing for automatic code restarts
  # (via forever) when the source code changes.
  volumes:
    - /Users/petesaia/Work/nodejs-docker-example/src:/src/app

# https://registry.hub.docker.com/_/redis/
redis:
  image: redis
  volumes:
    - /var/lib/redisdb:/data

# https://registry.hub.docker.com/_/mongo/
mongo:
  image: mongo

  # This volume allows for persistent database content. Where mongo
  # stores its data depends on how it was built so you may need to
  # change.
  volumes:
    - /usr/local/var/mongodb/:/data/db
